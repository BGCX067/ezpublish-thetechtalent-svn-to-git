
<div id="path">
<div id="path-design">
    
    <p class="path"><span class="path-here-text">You are here:</span>
                        <span class="path">Remove object</span>
        
                &nbsp;</p></div>
</div>

<hr class="hide" />

    <div id="leftmenu">
<div id="leftmenu-design">
    
            
    
    <div id="content-tree">

<div class="box-header"><div class="box-ml">
<h4>Content structure</h4>
</div></div>
<div class="box-bc"><div class="box-ml"><div class="box-content">


<div id="contentstructure">                    


<script type="text/javascript">
<!--
function ContentStructureMenu( path, persistent )
{
    this.cookieName     = "contentStructureMenu";
    this.cookieValidity = 3650; // days
    this.useCookie      = persistent;
    this.cookie         = this.useCookie ? _getCookie( this.cookieName ) : '';
    this.open           = ( this.cookie )? this.cookie.split( '/' ): [];
    this.autoOpenPath   = path;

    this.perm = "43b864bde60564a9abad0598b1d5d203";
    this.expiry = "1295922017";
    this.action = "";
    this.context = "navigation";
    this.hideNodes = [];
    this.languages = {"eng-US":"English (American)","eng-GB":"English (United Kingdom)"};
    this.classes = {"1":{name:"Folder",identifier:"folder"},"3":{name:"User group",identifier:"user_group"},"4":{name:"User",identifier:"user"},"13":{name:"Comment",identifier:"comment"},"14":{name:"Common ini settings",identifier:"common_ini_settings"},"15":{name:"Template look",identifier:"template_look"},"16":{name:"Article",identifier:"article"},"17":{name:"Article (main-page)",identifier:"article_mainpage"},"18":{name:"Article (sub-page)",identifier:"article_subpage"},"19":{name:"Blog",identifier:"blog"},"20":{name:"Blog post",identifier:"blog_post"},"21":{name:"Product",identifier:"product"},"22":{name:"Feedback form",identifier:"feedback_form"},"23":{name:"Frontpage",identifier:"frontpage"},"24":{name:"Documentation page",identifier:"documentation_page"},"25":{name:"Infobox",identifier:"infobox"},"26":{name:"Multicalendar",identifier:"multicalendar"},"27":{name:"Poll",identifier:"poll"},"28":{name:"File",identifier:"file"},"29":{name:"Flash",identifier:"flash"},"30":{name:"Flash recorder",identifier:"flash_recorder"},"31":{name:"Video/Flash Player",identifier:"flash_player"},"32":{name:"Global layout",identifier:"global_layout"},"33":{name:"Image",identifier:"image"},"34":{name:"Link",identifier:"link"},"35":{name:"Quicktime",identifier:"quicktime"},"36":{name:"Windows media",identifier:"windows_media"},"37":{name:"Real video",identifier:"real_video"},"38":{name:"Gallery",identifier:"gallery"},"39":{name:"Geo Article",identifier:"geo_article"},"40":{name:"Forum",identifier:"forum"},"41":{name:"Forum topic",identifier:"forum_topic"},"42":{name:"Forum reply",identifier:"forum_reply"},"43":{name:"Event",identifier:"event"},"44":{name:"Event calendar",identifier:"event_calendar"},"45":{name:"Banner",identifier:"banner"},"46":{name:"Forums",identifier:"forums"},"47":{name:"Silverlight",identifier:"silverlight"}};

    this.iconsList   = [];
    var wwwDirPrefix = "/share/icons/crystal-admin/16x16_indexed/";

    this.iconsList['article'] = wwwDirPrefix + "mimetypes/document.png";
    this.iconsList['comment'] = wwwDirPrefix + "mimetypes/txt2.png";
    this.iconsList['common_ini_settings'] = wwwDirPrefix + "apps/package_settings.png";
    this.iconsList['company'] = wwwDirPrefix + "apps/kuser.png";
    this.iconsList['file'] = wwwDirPrefix + "mimetypes/binary.png";
    this.iconsList['folder'] = wwwDirPrefix + "filesystems/folder.png";
    this.iconsList['forum'] = wwwDirPrefix + "filesystems/folder_man.png";
    this.iconsList['forum_message'] = wwwDirPrefix + "mimetypes/txt2.png";
    this.iconsList['forum_reply'] = wwwDirPrefix + "mimetypes/txt2.png";
    this.iconsList['forum_topic'] = wwwDirPrefix + "mimetypes/txt2.png";
    this.iconsList['gallery'] = wwwDirPrefix + "filesystems/folder_image.png";
    this.iconsList['image'] = wwwDirPrefix + "mimetypes/image.png";
    this.iconsList['link'] = wwwDirPrefix + "mimetypes/html.png";
    this.iconsList['person'] = wwwDirPrefix + "apps/personal.png";
    this.iconsList['poll'] = wwwDirPrefix + "mimetypes/log.png";
    this.iconsList['product'] = wwwDirPrefix + "apps/package.png";
    this.iconsList['product_review'] = wwwDirPrefix + "mimetypes/txt2.png";
    this.iconsList['multiprice_product'] = wwwDirPrefix + "apps/package.png";
    this.iconsList['dynamic_vat_product'] = wwwDirPrefix + "apps/package.png";
    this.iconsList['quicktime'] = wwwDirPrefix + "mimetypes/quicktime.png";
    this.iconsList['real_video'] = wwwDirPrefix + "mimetypes/real_doc.png";
    this.iconsList['review'] = wwwDirPrefix + "mimetypes/txt2.png";
    this.iconsList['template_look'] = wwwDirPrefix + "apps/package_settings.png";
    this.iconsList['user'] = wwwDirPrefix + "apps/personal.png";
    this.iconsList['user_group'] = wwwDirPrefix + "apps/kuser.png";
    this.iconsList['weblog'] = wwwDirPrefix + "mimetypes/document.png";
    this.iconsList['windows_media'] = wwwDirPrefix + "mimetypes/video.png";
    
    this.iconsList['__default__'] = wwwDirPrefix + "mimetypes/empty.png";

        ezjslib_preloadImageList( this.iconsList );
    
    this.showTips       = true;
    this.createHereMenu = "simplified";
    this.autoOpen       = true;


    this.updateCookie = function()
    {
        if ( !this.useCookie )
            return; 
        this.cookie = this.open.join('/');
        expireDate  = new Date();
        expireDate.setTime( expireDate.getTime() + this.cookieValidity * 86400000 );
        _setCookie( this.cookieName, this.cookie, expireDate );
    };

    // cookie functions
    function _setCookie( name, value, expires, path )
    {
        document.cookie = name + '=' + escape(value) + ( expires ? '; expires=' + expires.toUTCString(): '' ) + '; path='+ (path ? path : '/');
    }

    function _getCookie( name )
    {
        var n = name + '=', c = document.cookie, start = c.indexOf( n ), end = c.indexOf( ";", start );
        if ( start !== -1 )
        {
            return unescape( c.substring( start + n.length, ( end === -1 ? c.length : end ) ) );
        }
        return null;
    }

    function _delCookie( name )
    {
    	_setCookie( name, '', ( new Date() - 86400000 ) );
    }

    this.setOpen = function( nodeID )
    {
        if ( jQuery.inArray( '' + nodeID, this.open ) !== -1 )
        {
            return;
        }
        this.open[this.open.length] = nodeID;
        this.updateCookie();
    };

    this.setClosed = function( nodeID )
    {
    	var openIndex = jQuery.inArray( '' + nodeID, this.open );
        if ( openIndex !== -1 )
        {
        	this.open.splice( openIndex, 1 );
            this.updateCookie();
        }
    };

    this.generateEntry = function( item, lastli, rootNode )
    {
        var liclass = '';
        if ( lastli )
        {
            liclass += ' lastli';
        }
        if ( path && ( path[path.length-1] == item.node_id || ( !item.has_children && jQuery.inArray( item.node_id, path ) !== -1 ) ) )
        {
            liclass += ' currentnode';
        }
        var html = '<li id="n'+item.node_id+'"'
            + ( ( liclass )? ' class="' + liclass + '"':
                             '' )
            + '>';
        if ( item.has_children && !rootNode )
        {
            html += '<a class="openclose-open" id="a'
                + item.node_id
                + '" href="#" onclick="this.blur(); return treeMenu.load( this, '
                + item.node_id
                + ', '
                + item.modified_subnode
                +' )"><\/a>';
        }

        var languages = "[";
        var firstLanguage = true;
        for ( var j = 0; j < item.languages.length; j++ )
        {
            if ( this.languages[item.languages[j]] )
            {
                if ( !firstLanguage )
                {
                    languages += ",";
                }
                firstLanguage = false;
                languages += "{locale:'"
                    + item.languages[j].replace(/'/g,"\\'")
                    + "',name:'"
                    + this.languages[item.languages[j]].replace(/'/g,"\\'")
                    + "'}";
            }
        }
        languages += "]";

        var canCreateClasses = false;
        var classes = "[";
        if ( this.createHereMenu != 'disabled' )
        {
            if ( this.createHereMenu == 'full' )
            {
                var classList = item.class_list;

                for ( var j = 0; j < classList.length; j++ )
                {
                    if ( this.classes[classList[j]] )
                    {
                        if ( canCreateClasses )
                        {
                            classes += ",";
                        }
                        canCreateClasses = true;
                        classes += "{classID:'"
                            + classList[j]
                            + "',name:'"
                            + String(this.classes[classList[j]].name).replace(/'/g,"\\'").replace(/>/g,'&gt;').replace(/"/g,'&quot;')
                            + "'}";
                    }
                }
            }
            else
            {
                for ( j in this.classes )
                {
                    if ( canCreateClasses )
                    {
                        classes += ",";
                    }
                    canCreateClasses = true;
                    classes += "{classID:'"
                        + j
                        + "',name:'"
                        + String(this.classes[j].name).replace(/'/g,"\\'").replace(/>/g,'&gt;').replace(/"/g,'&quot;')
                        + "'}";
                }
            }
        }
        classes += "]";

        var classIdentifier = this.classes[item.class_id].identifier;
        var icon = ( this.iconsList[classIdentifier] )? this.iconsList[classIdentifier]: this.iconsList['__default__'];
        if ( this.context != 'browse' && item.node_id > 1 )
        {
            html += '<a class="nodeicon" href="#" onclick="ezpopmenu_showTopLevel( event, \'ContextMenu\', {\'%nodeID%\':'
                + item.node_id
                + ', \'%objectID%\':'
                + item.object_id
                + ', \'%languages%\':'
                + languages
                + ', \'%classList%\':'
                + classes
                + ' }, \''
                + String(item.name).replace(/'/g,"\\'").replace(/>/g,'&gt;').replace(/"/g,'&quot;')
                + '\', '
                + item.node_id
                + ', '
                + ( ( canCreateClasses )? '-1':
                                          '\'menu-create-here\'' )
                + ' ); return false"><img src="'
                + icon
                + '" alt="" title="['
                + this.classes[item.class_id].name.replace(/>/g,'&gt;').replace(/"/g, '&quot;')

                + '] Click on the icon to display a context-sensitive menu." /><\/a>';

        }
        else
        {
            html += '<img src="'
                + icon
                + '" alt="" />';
        }
        html += '&nbsp;<a class="image-text" href="'
            + ( ( this.action )? this.action + '/' + item.node_id:
                                 item.url )
            + '"';

        if ( this.showTips )
        {

            html += ' title="Node ID: '
                + item.node_id
                + ', Object ID: '
                + item.object_id
                + ', Visibility: '
                + ( ( item.is_hidden )? 'Hidden':
                                        ( item.is_invisible )? 'Hidden by superior':
                                                               'Visible' )
                + '"';

        }

        html += '><span class="node-name-'
            + ( ( item.is_hidden )? 'hidden':
                                    ( item.is_invisible )? 'hiddenbyparent':
                                                           'normal' )
            + '">'
            + item.name
            + '<\/span>';

        if ( item.is_hidden )
        {

            html += '<span class="node-hidden"> (Hidden)<\/span>';

        }
        else if ( item.is_invisible )
        {

            html += '<span class="node-hiddenbyparent"> (Hidden by superior)<\/span>';

        }

        html += '<\/a>';
        html += '<div id="c'
             + item.node_id
             + '"><\/div>';
        html += '<\/li>';

        return html;
    };

    this.load = function( aElement, nodeID, modifiedSubnode )
    {
        var divElement = document.getElementById('c' + nodeID);

        if ( !divElement )
        {
            return false;
        }

        if ( divElement.className == 'hidden' )
        {
            divElement.className = 'loaded';
            if ( aElement )
            {
                aElement.className = 'openclose-close';
            }

            this.setOpen( nodeID );

            return false;
        }

        if ( divElement.className == 'loaded' )
        {
            divElement.className = 'hidden';
            if ( aElement )
            {
                aElement.className = 'openclose-open';
            }

            this.setClosed( nodeID );

            return false;
        }

        if ( divElement.className == 'busy' )
        {
            return false;
        }


        var url = "/content/treemenu/" + nodeID
            + "/" + modifiedSubnode
            + "/" + this.expiry
            + "/" + this.perm;


        divElement.className = 'busy';
        if ( aElement )
        {
            aElement.className = "openclose-busy";
        }

        var thisThis = this;

        var request = jQuery.ajax({
            'url': url,
            'dataType': 'json',
            'success': function( data, textStatus )
            {             
                var html = '<ul>', items = [];
                // Filter out nodes to hide
                for ( var i = 0, l = data.children_count; i < l; i++ )
                {
                    if ( jQuery.inArray( data.children[i].node_id, thisThis.hideNodes ) === -1 )
                    {
                    	items.push( data.children[i] );
                    }
                }
                // Generate html content
                for ( var i = 0, l = items.length; i < l; i++ )
                {
                    html += thisThis.generateEntry( items[i], i == l - 1, false );
                }
                html += '<\/ul>';

                divElement.innerHTML += html;
                divElement.className = 'loaded';
                if ( aElement )
                {
                    aElement.className = 'openclose-close';
                }

                thisThis.setOpen( nodeID );
                thisThis.openUnder( nodeID );

                return;
            },
            'error': function( xhr, textStatus, errorThrown )
            {
                if ( aElement )
                {
                    aElement.className = 'openclose-error';

                    switch( xhr.status )
                    {
                        case 403:
                        {

                            aElement.title = 'Dynamic tree not allowed for this siteaccess';

                        } break;

                        case 404:
                        {

                            aElement.title = 'Node does not exist';

                        } break;

                        case 500:
                        {

                            aElement.title = 'Internal error';

                        } break;
                    }
                    aElement.onclick = function()
                    {
                        return false;
                    }
                }
            }
        });

        return false;
    };

    this.openUnder = function( parentNodeID )
    {
        var divElement = document.getElementById( 'c' + parentNodeID );
        if ( !divElement )
        {
            return;
        }

        var ul = divElement.getElementsByTagName( 'ul' )[0];
        if ( !ul )
        {
            return;
        }

        var children = ul.childNodes;
        for ( var i = 0; i < children.length; i++ )
        {
            var liCandidate = children[i];
            if ( liCandidate.nodeType == 1 && liCandidate.id )
            {
                var nodeID = liCandidate.id.substr( 1 ), openIndex = jQuery.inArray( nodeID, this.autoOpenPath );
                if ( this.autoOpen && openIndex !== -1 )
                {
                    this.autoOpenPath.splice( openIndex, 1 );
                    this.setOpen( nodeID );
                }
                if ( jQuery.inArray( nodeID, this.open ) !== -1 )
                {
                    var aElement = document.getElementById( 'a' + nodeID );
                    if ( aElement )
                    {
                        aElement.onclick();
                    }
                }
            }
        }
    };

    this.collapse = function( parentNodeID )
    {
        var divElement = document.getElementById( 'c' + parentNodeID );
        if ( !divElement )
        {
            return;
        }

        var aElements = divElement.getElementsByTagName( 'a' );
        for ( var index in aElements )
        {
            var aElement = aElements[index];
            if ( aElement.className == 'openclose-close' )
            {
                var nodeID        = aElement.id.substr( 1 );
                var subdivElement = document.getElementById( 'c' + nodeID );
                if ( subdivElement )
                {
                    subdivElement.className = 'hidden';
                }
                aElement.className = 'openclose-open';
                this.setClosed( nodeID );
            }
        }

        var aElement = document.getElementById( 'a' + parentNodeID );
        if ( aElement )
        {
            divElement.className = 'hidden';
            aElement.className   = 'openclose-open';
            this.setClosed( parentNodeID );
        }
    };
}

// -->
</script>

<script type="text/javascript">
<!--
var treeMenu;
(function(){    var path         = [];
    var persistence  = true;
    treeMenu         = new ContentStructureMenu( path, persistence );
                    
    var rootNode = {"node_id":2,"object_id":57,"class_id":23,"has_children":true,"name":"Home","url":"/content/view/full/2","modified_subnode":1295912379,"languages":["eng-US"],"class_list":[16,17,18,45,19,20,13,24,43,44,22,28,29,30,1,40,42,41,46,23,38,39,32,33,25,34,26,27,21,35,37,47,31,36]};

    document.writeln( '<ul id="content_tree_menu">' );
    document.writeln( treeMenu.generateEntry( rootNode, false, true ) );
    document.writeln( '<\/ul>' );

    treeMenu.load( false, 2, 1295912379 );})();
// -->
</script>
</div>

<div id="trash">
<a class="image-text" href="/content/trash/2" title="View and manage the contents of the trash bin."><img src="/design/admin2/images/trash-icon-16x16.gif" width="16" height="16" alt="Trash" />&nbsp;<span>Trash</span></a>
</div>



</div></div></div>

</div>


            


<div id="widthcontrol-links" class="widthcontrol">
<p>    <span class="current">Small</span>
    <a href="/user/preferences/set/admin_left_menu_size/medium" title="Change the left menu width to medium size.">Medium</a>
    <a href="/user/preferences/set/admin_left_menu_size/large" title="Change the left menu width to large size.">Large</a>
    </p>
</div>


<div id="widthcontrol-handler" class="hide">
<div class="widthcontrol-grippy"></div>
</div>

<!-- script type="text/javascript" src="/design/admin2/javascript/leftmenu_widthcontrol.js" charset="utf-8"></script -->

    
</div>
</div>

<hr class="hide" />